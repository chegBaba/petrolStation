model PetrolSupplySystem
--enum
enum Sex {male, female}
-------------------------------------------------------------------------------
-- CLASSES ********************************************************************
-------------------------------------------------------------------------------

class Company
attributes
  name : String
  wsprice : Integer --wholesale price
operations
  restock(volume : Real)
end

class Station
attributes
  owedMoney : Real
operations
  payOwe(amount : Real)
end

class Pump
attributes
  fillVolume : Real
  fillCost  : Real
  rtPrice : Real --retail price
  occupied : Boolean --a Pump servse one/two at same time
operations
  pumping(volume : Real)
end

class Store
attributes
  remainVolume : Real
  capacity : Real
operations  --operation of add or take 
  drain : Real
  fill  : Real
end

class Record
 attributes
  historyVolume : Real
  outstandVolume : Real
  owedMoney : Real
end

class Person
 attributes 
  name : String
  money : Real
 operations
  sendMoney(m : Real)
  receiveMoney(m : Real) 
end

class Supervisor < Person
 attributes
  todo : Integer
  myStation : Station 
 operations
  reset(p : Pump)
  signStation(s : Station) -- sign a supervisor to specific station
end

class Customer < Person
attributes
  todo : String
operations
  fillup(fillAmount : Real)
end

-------------------------------------------------------------------------------
-- ASSOCIATIONS ***************************************************************
-------------------------------------------------------------------------------

association owns between
  Company[1]
  Station[1..*]
end

association has between
  Station[1]
  Pump[1..*]
end

association connectedTo between
  Store[1]
  Pump[1..*]
end

--interaction can be using or reseting
association interacts between
  Person[*]
  Pump[0..*]
end

association records between
  Station[1]
  Record[1]
end

association workIn between
  Station[1]
  Supervisor[1]
end

-------------------------------------------------------------------------------
-- CONSTRAINTS ****************************************************************
-------------------------------------------------------------------------------
-------------------------------------
--hasMoney: Customer have money to pay
--hasGas: Store have gas to deliver
--notWorkHere: Customer is not the supervisor for same station
--transaction: Money flows 
-------------------------------------
--context Customer::fillup(fillAmount : Real)
  --pre hasMoney
  --pre hasGas
  --pre notWorkHere --Can not be customer and supervisor of same station
  --post transaction money = self.money - cost

-------------------------------------
--
--
-------------------------------------
--context Pump::fillip(fillAmount : Real)
  --pre notEmpty

-------------------------------------
--
--
-------------------------------------
--context Supervisor::reset(p : Pump)

